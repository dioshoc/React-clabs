{"version":3,"sources":["HOC/withAuthRedirect.js","assets/img/fish.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","comoinents/Main/Profile/Description/Description.module.css","comoinents/Main/Profile/Description/DescriptionStatus/DescriptionStatus.module.css","comoinents/Main/Profile/Posts/Posts.module.css","comoinents/Main/Profile/Description/DescriptionStatus/DescriptionStatusWithHooks.jsx","comoinents/Main/Profile/Description/Description.jsx","comoinents/Main/Profile/Description/DescriptionContainer.jsx","comoinents/Main/Profile/Posts/Posts.jsx","comoinents/Main/Profile/Posts/PostsContainer.jsx","comoinents/Main/Profile/Profile.jsx","comoinents/Main/Profile/ProfileConatiner.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","Auth","withAuthRedirect","Components","RedirectComponent","this","props","to","React","Component","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","DesctiptionStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","Class","descriptionStatus","onDoubleClick","userID","AuthID","style","cursor","onBlur","updateUserStatus","onChange","e","currentTarget","autoFocus","Description","profile","main","photos","large","src","fish","alt","img","description","name","fullName","userId","info","lookingForAJob","lookingForAJobDescription","Preloader","ProfilePage","id","Posts","memo","post","production","title","PostProductionForm","onSubmit","addPost","NewPostText","wall","posts","map","data","item","small","text","message","maxLength250","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","input","placeholder","validate","required","btn","PostContainer","PostData","dispatch","Profile","content","user","DescriptionContainer","ProfileConatiner","match","params","history","getUserID","getUserStatus","compose","setUserProfile","setAuthUserData","withRouter"],"mappings":"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","file":"static/js/3.345a0387.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/Login\" />\r\n\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","export default __webpack_public_path__ + \"static/media/fish.48e0f2cd.svg\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Description_main__2Zetx\",\"img\":\"Description_img__3qYnw\",\"description\":\"Description_description__3zkTr\",\"name\":\"Description_name__2CjZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionStatus\":\"DescriptionStatus_descriptionStatus__13qEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Posts_input__eWzHA\",\"btn\":\"Posts_btn__1D8ut\",\"item\":\"Posts_item__1eDTN\",\"img\":\"Posts_img__17vGq\",\"text\":\"Posts_text__1fNUY\"};","import Class from \"./DescriptionStatus.module.css\"\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst DesctiptionStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activeteMode = () => {\r\n        if (props.userID === props.AuthID) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    const deactiveteEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onUserStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        < div className={Class.descriptionStatus} >\r\n            {!editMode &&\r\n                <div onDoubleClick={activeteMode}>\r\n                    <span>\r\n                        {props.AuthID ? status || <span style={{ cursor: 'pointer' }}>Double click here to add status</span> : status || \"No Status\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {\r\n                editMode &&\r\n                <div onBlur={deactiveteEditMode}>\r\n                    <input onChange={onUserStatusChange} autoFocus=\"true\" value={status} />\r\n                </div>\r\n            }\r\n        </ div >\r\n    )\r\n}\r\n\r\nexport default DesctiptionStatusWithHooks","import Class from './Description.module.css'\r\nimport Preloader from './../../../common/Preloader'\r\nimport fish from \"../../../../assets/img/fish.svg\";\r\nimport DesctiptionStatusWithHooks from './DescriptionStatus/DescriptionStatusWithHooks';\r\n\r\nfunction Description(props) {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={Class.main}>\r\n            <div>\r\n                {props.profile.photos.large === null\r\n                    ? <img src={fish} alt=\"\" className={Class.img} />\r\n                    : <img src={props.profile.photos.large} alt=\"\" className={Class.img} />\r\n                }\r\n            </div>\r\n            <div className={Class.description}>\r\n                <h1 className={Class.name}>{props.profile.fullName}</h1>\r\n\r\n                <DesctiptionStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} userID={props.profile.userId} AuthID={props.AuthID} />\r\n\r\n                <div className={Class.info}>\r\n                    <div>Job search: {props.profile.lookingForAJob === true ? \"YEs;)\" : \"no\"}</div>\r\n                    <div>Description: {props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description","import { connect } from 'react-redux';\r\nimport { updateUserStatus, } from \"./../../../../redux/profile-reducer\";\r\n\r\nimport Description from \"./Description\";\r\n\r\nlet mapStateToProps = (state, props) => {\r\n    return {\r\n        status: state.ProfilePage.status,\r\n        AuthID: state.Auth.id,\r\n        profile: props.profile,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateUserStatus })(Description)","import React from 'react';\r\nimport Class from './Posts.module.css'\r\nimport fish from \"../../../../assets/img/fish.svg\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst Posts = React.memo((props) => {\r\n    let addPost = (value) => {\r\n        props.addPost(value.NewPostText)\r\n    }\r\n    if (!props.profile) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={Class.post}>\r\n            <div className={Class.production}>\r\n                {props.profile.userId === props.AuthID\r\n                    ? <h1 className={Class.title}>My posts</h1>\r\n                    : <h1 className={Class.title}>{props.profile.fullName} posts</h1>}\r\n                {props.profile.userId === props.AuthID ? <PostProductionForm onSubmit={addPost} /> : null}\r\n            </div>\r\n\r\n            <div className={Class.wall}>\r\n                {\r\n                    props.posts.map(data =>\r\n                        <div className={Class.item}>\r\n                            {props.profile.photos.large === null\r\n                                ? <img src={fish} alt=\"\" className={Class.img} />\r\n                                : <img src={props.profile.photos.small} alt=\"\" className={Class.img} />\r\n                            }\r\n                            <p className={Class.text}>{data.message}</p>\r\n                        </div>)\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n)\r\nconst maxLength250 = maxLengthCreator(250)\r\n\r\nfunction PostsProduction(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"form\">\r\n            <Field component={Textarea}\r\n                name=\"NewPostText\"\r\n                className={Class.input}\r\n                placeholder=\"Enter your message...\"\r\n                validate={[maxLength250, required]}\r\n            />\r\n            <button className={Class.btn}>Send</button>\r\n        </form >\r\n    )\r\n}\r\n\r\nconst PostProductionForm = reduxForm({ form: 'post' })(PostsProduction)\r\n\r\nexport default Posts","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../../redux/profile-reducer'\r\nimport Posts from './Posts';\r\n\r\nlet mapStateToProps = (state, props) => {\r\n    return {\r\n        posts: state.ProfilePage.PostData,\r\n        profile: props.profile,\r\n        AuthID: state.Auth.id,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (NewPostText) => {\r\n            dispatch(addPost(NewPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst PostContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostContainer","import DescriptionContainer from './Description/DescriptionContainer';\r\nimport PostContainer from './Posts/PostsContainer';\r\nimport Class from './Profile.module.css';\r\n\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className={Class.content}>\r\n            <div className={Class.user}>\r\n                <DescriptionContainer profile={props.profile} />\r\n                <PostContainer profile={props.profile} />\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setUserProfile, getUserID, getUserStatus } from \"./../../../redux/profile-reducer\";\r\nimport { setAuthUserData } from \"./../../../redux/auth-reduser\";\r\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileConatiner extends React.Component {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID\r\n        if (!userID) {\r\n            userID = this.props.Auth.id\r\n            if (!userID) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserID(userID)\r\n        this.props.getUserStatus(userID)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToPorps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    Auth: state.Auth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToPorps, {\r\n        setUserProfile,\r\n        setAuthUserData,\r\n        getUserID,\r\n        withAuthRedirect,\r\n        getUserStatus,\r\n    }),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(ProfileConatiner)\r\n\r\n"],"sourceRoot":""}